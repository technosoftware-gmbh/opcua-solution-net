name: Build .NET 8.0, .NET 7.0 and .NET 6.0

on:
  push:
  pull_request:
    branches: [ master ]
    paths:
    - '**.cs'
    - '**.csproj'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

jobs:
  build-net8:
    name: test-${{matrix.os}}-${{matrix.customtesttarget}}-${{matrix.csproj}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false    
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]    
        csproj: [TutorialSamples]
        include:
          - framework: 'net8.0'
            dotnet-version: '8.0.x'
            configuration: 'Release'
            customtesttarget: net8.0
            
    env:
      OS: ${{ matrix.os }}
      DOTNET_VERSION: ${{ matrix.dotnet-version }}
      CONFIGURATION:  ${{ matrix.configuration }}
      CSPROJ: ${{ matrix.csproj }}
      CSPROJECT: "./${{ matrix.csproj }}.sln"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Set Cloud Version
      shell: pwsh
      run: ./.azurepipelines/set-version.ps1

    - name: Build
      run: dotnet build ${{ env.CSPROJECT }} --force --framework ${{ matrix.framework }} --configuration ${{ matrix.configuration }} /p:CustomTestTarget=${{ matrix.customtesttarget }}

  build-net7:
    name: test-${{matrix.os}}-${{matrix.customtesttarget}}-${{matrix.csproj}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false    
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]    
        csproj: [TutorialSamples]
        include:
          - framework: 'net7.0'
            dotnet-version: '7.0.x'
            configuration: 'Release'
            customtesttarget: net7.0
            
    env:
      OS: ${{ matrix.os }}
      DOTNET_VERSION: ${{ matrix.dotnet-version }}
      CONFIGURATION:  ${{ matrix.configuration }}
      CSPROJ: ${{ matrix.csproj }}
      CSPROJECT: "./${{ matrix.csproj }}.sln"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Set Cloud Version
      shell: pwsh
      run: ./.azurepipelines/set-version.ps1

    - name: Build
      run: dotnet build ${{ env.CSPROJECT }} --force --framework ${{ matrix.framework }} --configuration ${{ matrix.configuration }} /p:CustomTestTarget=${{ matrix.customtesttarget }}

  build-net6:
    name: test-${{matrix.os}}-${{matrix.customtesttarget}}-${{matrix.csproj}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false    
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]    
        csproj: [TutorialSamples]
        include:
          - framework: 'net6.0'
            dotnet-version: '6.0.x'
            configuration: 'Release'
            customtesttarget: net6.0
            
    env:
      OS: ${{ matrix.os }}
      DOTNET_VERSION: ${{ matrix.dotnet-version }}
      CONFIGURATION:  ${{ matrix.configuration }}
      CSPROJ: ${{ matrix.csproj }}
      CSPROJECT: "./${{ matrix.csproj }}.sln"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Set Cloud Version
      shell: pwsh
      run: ./.azurepipelines/set-version.ps1

    - name: Build
      run: dotnet build ${{ env.CSPROJECT }} --force --framework ${{ matrix.framework }} --configuration ${{ matrix.configuration }} /p:CustomTestTarget=${{ matrix.customtesttarget }}

